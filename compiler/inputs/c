"For debugging"
(emit "#LoROM")

(defmacro 16-bit-mode () `(asm rep :immediate #x30))
(defmacro 8-bit-mode () `(asm sep :immediate #x30))

(defmacro write-w (addr value)
  `(progn (asm lda :immediate-w ,value)
          (asm sta :direct ,addr)))

(c-fn main ()
  "Take the processor out of compatibiltiy mode.  "
  (c-var x :int)
  (c-var y :int)

  (8-bit-mode)
  (asm clc :implied)
  (asm xce :implied)
  (c-var x :int) ;; This is invalid

  "Set up some memory to cycle colors.  "
  (16-bit-mode)
  (write-w #x00F0 #x0000)
  (write-w #x00F2 #x0000)

  "Initialize video"
  (8-bit-mode)
  (asm lda :immediate #x0F)
  (asm sta :absolute #x2100)
  (asm lda :immediate #x00)
  (asm sta :absolute #x2121)

  (c-label yay)

  "Calculate the color to display"
  (16-bit-mode)
  (c-if (asm lda :absolute #x00F2) ;; if _ then trippy else black

        (progn
          (asm lda :immediate-w #x0000)
          (asm clc :implied)
          (asm adc :absolute #x00F0)

          "Increment our color-offset memory space by 16.  "
          (asm pha :implied) ;; stash A for later
          (asm lda :absolute #x00F0)
          (asm clc :implied)
          (asm adc :immediate-w #x0001)
          (asm sta :absolute #x00F0)
          (asm pla :implied))

        (asm lda :immediate-w #x0000))

  "Set the screen color"
  (8-bit-mode)
  (asm sta :absolute #x2122)
  (asm xba :implied)
  (asm sta :absolute #x2122)

  ;; *(0x00F2) = !(*(0x00F2))
  (16-bit-mode)
  (c-if (asm lda :absolute #x00F2)
        (write-w #x00F2 #x0001)
        (write-w #x00F2 #x0001))

  (c-goto yay))  ;; Infinte loop

"Test the gotos and labels system.  Notice that the implicit ELSE
 label generated by C-IF doesn't conflict with the explicit ELSE
 label."
(c-fn a ()
  (c-label foo)
  (c-label else)
  (16-bit-mode)
  (c-if (asm lda :immediate-w #x0001)
        (asm lda :immediate-w #xFF00)
        (progn
          (asm lda :immediate-w #xFFFF)
          (c-goto foo)))
  (c-goto else))

(defun set-reset-handler (value)
  (emit (format nil
                "#Data $00:FFFC _reset_handler {~a $0000}"
                value)))

(set-reset-handler "$8000")
